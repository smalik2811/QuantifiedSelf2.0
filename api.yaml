openapi: 3.0.3
info:
  title: QuantifiedSelf App V2
  description: |-
    QuantifiedSelf App is a personal tracking app.
    - It allows the user to create a new account.
    - The logged in user can create a new tracker of different types, read, update them and delete them.
    - Every tracker can be logged at any time with appropiate value, also can be read, updated and deleted.
    - The app sends an alert every evening if none of the tracker is logged by the user.
    - User can import/export the trackers and logs.
    - The sends a montly report to the user containing previous month activity.
    
    ---
    
    # Database Schema
    
    -  ## Role
        | Column Name | Column Type | Constraint                             |
        |----------|------------|-------------------------------------------|
        | id       | Integer    | Primary Key |
        | name     | Text    | Not Null, Unique                |
        | description     | Text    | |
      
    
    -  ## User
        | Column Name | Column Type | Constraint                             |
        |----------|------------|-------------------------------------------|
        | id       | Integer    | Primary Key, Auto-increment|
        | fs-uniquifier     | Text    | Not Null, Unique                |
        | password     | Text    |Not Null |
        |first_name|Text| Not Null|
        |last_name|Text||
        |active|Integer|Default(1)|
        |email| Text| Not Null, Unique|
        |role| Integer|Not Null, Foreign Key( "Role(id)" )|
    
    - ## Tracker_Type
        |Column Name | Column Type | Constraint|
        |---|---|---|
        |id|Integer|Primary Key, Auto-increment|
        |name|Text|Not Null, Unique|
    
    -  ## Tracker
        |Column Name | Column Type | Constraint|
        |---|---|---|
        |id|Integer|Primary Key, Auto-increment|
        |name|Text|Not Null|
        |description|Text||
        |type|Integer|Not Null, Foreign Key( "Tracker_Type(id)" )|
        |user_id|Integer|Not Null, Foreign Key( "User(id)" )|
        |last_modified| Text| Not Null, Default( 'Never' )|
        
        
    -  ## Month_History
        |Column Name | Column Type | Constraint|
        |---|---|---|
        |tracker_id|Integer|Primary Key, Foreign Key( "Tracker(id)" )|
        
    -  ## Options
        |Column Name | Column Type | Constraint|
        |---|---|---|
        |tracker_id|Integer|Not Null, Primary Key, Foreign Key( "Tracker(id)" )|
        |name|Text|Not Null, Primary Key|
        |active| Integer| Not NUll, Default(1)|
    
    -  ## Log
        |Column Name | Column Type | Constraint|
        |---|---|---|
        |id|Integer| Primary Key, Auto-increment|
        |tracker_id|Integer|Not Null, Foreign Key( "Tracker(id)" )|
        |value| Text| Not Null|
        |note|Text||
        |timestamp|Text|Not Null|
  
    
    ---
    # Tracker Types
    | Code     | Name            |
    |----------|-----------------|
    | 1        | Numerical       |
    | 2        | Multiple Choice |
    | 3        | Time Duration   |
    | 4        | Boolean         |
    
  contact:
    email: 21f1001878@student.onlinedegree.iitm.ac.in
  version: "2.0"
servers:
  - url: http://192.168.78.50:8080/api
tags:
  - name: user
    description: Operations about user
  - name: tracker
    description: Operations about tracker
  - name: log
    description: Operations about log
paths:
  /user:
    post:
      tags:
        - user
      summary: Create new user
      description: Anyone can create a new account with a unique userName and a valid email.
      operationId: createUser
      requestBody:
        description: Details to create a new user.
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "prof_x_54@outlook.com"
                password:
                  type: string
                  format: password
                  example: "Long_Password_Is_Better_Than_A_Complex_One"
                firstName:
                  type: string
                  example: "Charles"
                lastName:
                  type: string
                  example: "Xavier"
                
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Provide valid email
        '409':
          description: Email already exist.
        '500':
          description: Unexpected error.
    
    get:
      tags:
        - user
      summary: Get User Details
      description: 'The logged in user can get the personal details.'
      operationId: viewUser
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Operation Successful
          content:
            applicatin/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    example: Charles
                  lastName:
                    type: string
                    example: Xavier
                  email:
                    type: string
                    example: prof_x_54@outlook.com
                  id:
                    type: integer
                    example: 1
        '401':
          description: Unauthorised Access
        '500':
          description: Unexpected error.
          
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: 'Username and Password is must to login.'
      operationId: loginUser
      parameters:
        - name: include_auth_token
          in: query
          schema:
            type: string
            default: "True"
      requestBody:
        description: Credentials to login.
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: prof_x_54@outlook.com
                password:
                  type: string
                  format: password
                  example: Long_Password_Is_Better_Than_A_Complex_One
      responses:
        '200':
          description: Login Successful and authorisation token provide.
          content:
            applicatin/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 4458ECBCD673C3307AC8C3C071CB03E4DA60890556E90F135AF7F92E3B6DC99E
        '400':
          description: Wrong credentials
        '500':
          description: Unexpected error.
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Logout Successful
        '401':
          description: Unauthorised Access
        '500':
          description: Unexpected error.
         
  /tracker:
    post:
      tags:
        - tracker
      summary: Create new Tracker
      description: Logged in user can create a new Tracker.
      operationId: createTracker
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      requestBody:
        description: Details of the Tracker to be created.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Evening Game
                description:
                  type: string
                  example: Game I play in Evening.
                type:
                  type: integer
                  format: int64
                  example: 4
                options:
                  type: array
                  items:
                      type: string
                  example: ["Cricket", "Badminton","Football"]
      responses:
        '201':
          description: Tracker created successfully.
        '400':
          description: Invalid Tracker Type Supplied
        '401':
          description: Unauthorised Access
        '409':
          description: Tracker already exist.
        '500':
          description: Unexpected error.  
      
    get:
      tags:
        - tracker
      summary: Get all the Trackers.
      description: Logged in user can get the details of all the trackers user created.
      operationId: readAllTrackers
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    last_modified:
                      type: string
                example:
                  - id: 1
                    name: Evening Game
                    description: The game I play in Evening.
                    last_modified: "2022-01-01 03:45"
        '401':
          description: Unauthorised Access
        '500':
          description: Unexpected error.  
      
  /tracker/{id}:
    get:
      tags:
        - tracker
      summary: Get the details of the tracker specified
      description: Logged in user can get the details of the tracker name specified.
      operationId: readTracker
      parameters:
        - name: id
          in: path
          description: Id of the tracker that needs to be read.
          required: true
          schema:
            type: string
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Operation Successful.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Evening Game
                  description:
                    type: string
                    example: The game I play in evening.
                  type:
                    type: integer
                    format: int64
                    example: 2
                  options:
                    type: array
                    items:
                      type: string
                    example: ["Cricket", "Badminton", "Football"]
        '400':
          description: Invalid id supplied.
        '401':
          description: Unauthorised Access
        '404':
          description: Tracker not found.
        '500':
          description: Unexpected Error.  
      
    patch:
      tags:
        - tracker
      summary: Update the tracker
      description: Logged in user can update the name, description, options of the tracker.
      operationId: updateTracker
      parameters:
        - name: id
          in: path
          description: Id of the tracker that needs to be read.
          required: true
          schema:
            type: string
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true   
      requestBody:
        description: Details of the Tracker
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Evening Game
                description:
                  type: string
                  example: Game I play in Evening.
                type:
                  type: string
                  example: 4
                optons:
                  type: array
                  items:
                    type: string
                  example: ["Cricket", "Badminton", "Football"]
                
      responses:
        '201':
          description: Update Successful.
        '400':
          description: Invalid id supplied./ Tracker with same name already exist.
        '401':
          description: Unauthorised Access
        '404':
          description: Tracker not found.
        '500':
          description: Unexpected Error.  
      
    delete:
      tags:
        - tracker
      summary: Delete the tracker
      description: Logged in user can delete the tracker and the corresponding logs.
      operationId: deleteTracker
      parameters:
        - name: id
          in: path
          description: Id of the tracker that needs to be deleted.
          required: true
          schema:
            type: string
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Tracker not found.
        '200':
          description: Deletion Successful.
        '401':
          description: Unauthorised Access
        '500':
          description: Unexpected Error.  
     
  /log:
    post:
      tags:
        - log
      summary: Create new Log
      description: Logged in user can log a Tracker.
      operationId: createLog
      parameters:
        - name: tracker_id
          in: header
          schema:
            type: string
          required: true
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      requestBody:
        description: Details of the Log
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                  example: Cricket
                note:
                  type: string
                  example: I think I am kinda enjoying it.
                timestamp:
                  type: string
                  example: "2022-01-01 03:45"
      responses:
        '201':
          description: Log created successfully.
        '400':
          description: Bad Request
        '401':
          description: Unauthorised Access
        '404':
          description: Tracker not found.
        '500':
          description: Unexpected error.

    get:
      tags:
        - log
      summary: Get all logs of a tracker
      description: Logged in user can get all logs of a tracker with the id
      operationId: readLog
      parameters:
        - name: tracker_id
          in: header
          schema:
            type: string
          required: true
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true  
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                      example: 1001
                    value:
                      type: string
                      example: "Cricket"
                    note:
                      type: string
                      example: I think I am kinda enjoying Cricket.
                    timestamp:
                      type: string
                      example: "2022-01-01 03:45"
                    tracker_id:
                      type: integer
                      example: 1
        '401':
          description: Unauthorised Access
        '404':
          description: Log not found.
        '500':
          description: Unexpected error.
                
  /log/{id}:  
    get:
      tags:
        - log
      summary: Get Log by id.
      description: Logged in user can get the details of a particular log with the id.
      operationId: readAllLogs
      parameters:
        - name: id
          in: path
          description: Name of the tracker to get all the logs.
          required: true
          schema:
            type: string
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1001
                  value:
                    type: string
                    example: "Cricket"
                  note:
                    type: string
                    example: "I think I am kinda enjoying Cricket."
                  timestamp:
                    type: string
                    example: "2022-01-01 03:45"
                  tracker_id:
                    type: integer
                    example: 1
        '401':
          description: Unauthorised Access
        '404':
          description: Log not found.
        '500':
          description: Unexpected Error.
    patch:
      tags:
        - log
      summary: Update Log
      description: Logged in user can update the log with the logid.
      operationId: updateLog
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true  
      requestBody:
        description: Details of the Log
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                  example: "Cricket"
                note:
                  type: string
                  example: I think I am kinda enjoying Cricket.
                timestamp:
                  type: string
                  example: "2022-01-01 03:45"
      responses:
        '201':
          description: Update Successful.
        '401':
          description: Unauthorised Access
        '404':
          description: Log not found.
        '500':
          description: Unexpected Error.   
    delete:
      tags:
        - log
      summary: Delete Log
      description: Logged in user can delete the log with the logid.
      operationId: deleteLog
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Log not found.
        '200':
          description: Deletion Successful.
        '400':
          description: Invalid id supplied.
        '401':
          description: Unauthorised Access
        '500':
          description: Unexpected Error.   
    